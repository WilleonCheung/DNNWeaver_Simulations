
##########################################################################################
	     OPEN SOURCE DNNWEAVER1 IMPLEMENTATION ON FPGA 
##########################################################################################
						       				14-03-2019. 
This is the modified copy of OPEN SOURCE DNNWeaver v1.0 system 

compiler function generates the verilog header based on input prototxt. 
fpga section use the header and source rtl to generate the accelerator blocks. 

Modification: 
	Added functionalities in the compiler section. 
	Modified and fixed the fpga rtl codes. 
	migrated the design to microblaze based system on kintex7 board 
	Added uart functionality to load the weight and image 

##########################################################################################


##########################################################################################

A. Requirements   
  	1. caffe installation 
  	2. python 2.7  	
  	3. iverilog	 (for simulation. Other simulators can be used with modifications in the script) 
  	4. Vivado Hlx  (Support genesys -kintex7 board / Other target boards )  
  	5. Vivado SDK  (To develope embedded processor application). 
  	6. Genesys Kintex-7 board / Any other FPGA board with tools support.  
  	7. teraterm / any other similar utility 
  

B. hardware file structure

 hardware
   |-- compiler  :  Compiler to generate the parameters file for hardware
   |
   |
   |
   |-- fpga      :  Contains RTL files, Simulation testbench and boarddesign(for Genesys2) files and scripts.  
        |
        |--hardware  : contains  rtl files
        |      	|              
        |       |-- source   : RTL files
        |       |-- include  : Include files generated by compiler script for a particular prototxt (ex: lenet prototxt) 
        |
        |--simulation   :  Simulation setup , testbench and script to excute simulation
        |
        |--boarddesign
	      	|    
	      	|--kintex7     
	      	 	|--hlx        : Script to geneate Vivado project for files present in "hardware" folder. 
                	|              
              	   	|--sdk        : Vivado SDK project and downloadable bit file generated for "lenet" prototxt 
		  	|
		  	|--Bitstream  : downloadable bit file for kintex7 board (Genesys2)
			|
			|--brdfiles   : sample w_lenet and image files for board. 
			
				   
                                  
                                   
C.  Environment Variable Settings
       export PATH=/local/workspace/tools/xilinx/Vivado/2017.2/bin/:$PATH
       	     
D.  Caffe framework and training of lenet classifier 

    Refer the following links to install caffe and train Lenet using mnist datasets. 	
    http://caffe.berkeleyvision.org/installation.html	
    http://caffe.berkeleyvision.org/gathered/examples/mnist.html  

E.  DNNWeaver framework flow 

   1) Compile prototxt: 
	cd hardware/fpga
	update Makefile.config 		( set vivado installation path ) 
	update Makefile 		( lenet.prototxt )  
	make clean 
	make dw_compile 
	
	outputs: 	
	hardware/include/*.vh files.  
	./layer_memmap.txt 

   2) Simulation: 
        cd hardware/fpga/simulation
	execute the following scripts 
        ./gen_wtimghex.sh  	 	( generate net weight and test image file: weightimghex_in.txt ) 
        ./sim.sh 		 	( run iverilog simulation ) 
      outputs: 
		./weightimghex_in.txt 
		./simoutpouts/compiler.out  		
		./simoutputs/sim.log 
		./simoutputs/*.vcd   	 	( ~6GB. delete this file) 
		./simoutputs/[conv|ip].txt 
	 
   3) FPGA Implementation:  
   
	3.1 Vivado PnR & bitstream generation. 

	 cd fpga/boarddesign/kintex7/hlx/
 	 Launch Vivado
	 source create_mbdnnwprj.tcl 
	 This will create Vivado project and Microblaze based system. 
	 Generate the bitstream. 
	 Slect File->Export->Export Hardware (Tick include bitstream checkbox).     
	 Specify the export location as fpga/boarddesign/kintex7/sdk/ 
	 This will write out the "zync_wrapper.hdf"
	 
    	3.2 Vivado SDK - Microblaze SW development 

	 Open Vivado SDK from Vivado Hlx by File -> Launch SDK 
	 Specify the exported file location and workspace as fpga/boarddesign/kintex7/sdk/ 
	 In the SDK create an Application Project.  File -> Application Project ( Helloworl template) 
	 Specify the project name as dnnwsdk ( The project is already exists in the repositary. You can open or overwrite the project)
	 Replace the default helloworld.c file added in dnnwsdk/src with the file availbale in src. 
	 Build the project  (Project -> Build all)
	 This generates the required .elf. 
	 
	3.3 Programming FPGA and Loading the .elf application. 

	 Now connect the Genesys2 Board to the System. 
	 Connect the USB cables to the JTAG and UART micro usb ports on the board  and power on the Board. 
	 Select ""Xilinx Tools" -> Program FPGA option .  Select Program to download the /bit file to the fpga systems 
	 		Writing bitstream E:/FPGACNNProject/dnnWeaver1/hardware/fpga/boarddesign/kintex7/sdk/zynq_wrapper_hw_platform_0/download.bit...
			
	 Select  "Xilinx Tools" -> XMD Console option. This opens the XMD console in the SDK . 
	 In the XMD type the following commands to download the .elf file. 
	 
	 XMD% connect mb mdm
		Connected to "mb" target. id = 0
		Starting GDB server for "mb" target (id = 0) at TCP port no 1234
	 XMD% rst ; stop
		System reset successfully
		Processor stopped
	 XMD% cd E:/FPGACNNProject/dnnWeaver1/hardware/fpga/boarddesign/kintex7/sdk/dnnwsdk/Debug
	 XMD% dow dnnwsdk.elf 
		Download Progress..10.20.30.40.50.60.70.80.90..Done
		Setting PC with Program Start Address 0x00000000
		
	 The microblaze application is loaded into the board now.  Do not close the SDK and XMD window. 
	  	
	3.4 Board Data preparation: 

	  The weigth and image for the data need to be generated for the kintex board . 
	  This format is different from the format used in simulaions. 
 	  To generate the weight and image bin data run the script /software/scripts/createdata_lenet.sh 

	  The sample weight and test image for lenet is given at fpga/boarddesign/kintex7/brdfiles. 
		
		  
   4) Loading data via UART and Start FPGA Classifier. 

	Now open the teratem application (open source uart terminal application). 
	Connect teraterm to the board COM port ( ex : COM3) 
	Set Setup-> serial Port -> Baud rate -> 115200 ( microblaze uart lite speed) 
	
	Run the microblaze application in the FPGA :  XMD% run 
	now the application expects the weight to be loaded from uart. 
		
	In teraterm, using the File -> SendFile load the w_lenet.bin weight file ( Note : set binary format in the sendFile wizard)
	Then Load the image file (Ex : mnist_img_2.bin)
		
	The FPGA classifier process the weight and image and provide the classification as below 
	
		OutData[0]:    289 
		OutData[1]:    1004 
		OutData[2]:    1718 
		OutData[3]:    -43 
		OutData[4]:    -907 
		OutData[5]:    -1273 
		OutData[6]:    276 
		OutData[7]:    -703 
		OutData[8]:    451 
		OutData[9]:    -525 
		--------------The Input Digit is 2 -----------

F. FPGA Design Limitations 


		
########################################################################################################
		
		
		
		
		
	
